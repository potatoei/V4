-- Decompiled by Electron BETA [ Made By (Co) ]
-- Path: ReplicatedStorage.Modules.Roblox
local S_TweenService_1 = game:GetService("TweenService")
local S_CollectionService_2 = game:GetService("CollectionService")
local S_RunService_3 = game:GetService("RunService")
local S_UserInputService_4 = game:GetService("UserInputService")
local u1 = {}
u1.Random = Random.new()
u1.zeroVector2 = Vector2.new()
u1.zeroVector3 = Vector2.new()()
u1.identityCFrame = CFrame.new()
u1.upVector2 = Vector2.new(0, 1)
u1.upVector3 = Vector2.new(0, 1)(0, 1, 0)
local u2 = {}
for v3 = 1, 76 do
u2[v3] = "1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()_+./":sub(v3, v3)
end
local u4 = Random.new()
u1.newGuid = (function() -- newGuid
for v1 = 1, 10 do
local v2 = ""
end
return v2
end)
u1.isPlaySolo = (function() -- isPlaySolo
else if S_RunService_3:IsClient() then
else if S_RunService_3:IsServer() then
end
end
return S_RunService_3:IsStudio()
end)
u1.waitForDescendant = (function(a1, a2, a3) -- waitForDescendant
local u1 = a3 or 60
local u2 = a1:FindFirstChild(a2, true)
else if u2 then
return u2
end
local v3 = 1000000
if u1 < v3 then
if v3 < u1 then
v3 = coroutine.wrap
v3 = v3((function()
wait(u1)
if not u2 then
warn("Roblox.waitForDescendant(%s, %s) is taking too long")
end
end))
v3()
end
end
while not u2 do
v3 = a1.DescendantAdded
if v3.Name == a2 then
return v3
end
end
end)
u1.create = (function(a1) -- create
return (function(a1)
local v1 = Instance.new(a1)
local v2, v3, v4 = pairs(a1)
for v5,v6 in v2 do
if v5 ~= "Parent" then
v1[v5] = v6
end
end
v1.Parent = v2
return v1
end)
end)
u1.weldModel = (function(a1) -- weldModel
local v1, v2, v3 = pairs(a1:GetDescendants())
for v4,v5 in v1 do
else if v5:IsA("BasePart") then
if v5 ~= a1.PrimaryPart then
local v6 = Instance.new("WeldConstraint")
v6.Part0 = a1.PrimaryPart
v6.Part1 = v5
v6.Parent = v5
end
end
end
end)
u1.setNetworkOwner = (function(a1, a2) -- setNetworkOwner
if not a1 then
warn("Cannot setNetworkOwner on nil model")
return
end
local v1, v2, v3 = pairs(a1:GetDescendants())
for v4,v5 in v1 do
else if v5:IsA("BasePart") then
if not v5.Anchored then
v5:SetNetworkOwner(a2)
end
end
end
end)
u1.createMotor6D = (function(a1, a2) -- createMotor6D
local v1 = Instance.new("Motor6D")
v1.Part0 = a1
v1.Part1 = a2
v1.C0 = a1.CFrame:toObjectSpace(a2.CFrame)
v1.C1 = CFrame.new()
v1.Parent = a1
return v1
end)
u1.getTotalMass = (function(a1) -- getTotalMass
local v1 = a1:GetConnectedParts(true)
local v2, v3, v4 = pairs(v1)
for v5,v6 in v2 do
end
return 0 + v6:GetMass()
end)
u1.waitForTween = (function(a1, a2, a3) -- waitForTween
S_TweenService_1:Create(a1, a2, a3):Play()
S_TweenService_1:Create(a1, a2, a3).Completed:wait()
end)
u1.tween = (function(a1, a2, a3) -- tween
S_TweenService_1:Create(a1, a2, a3):Play()
end)
u1.fadeAway = (function(a1, a2, a3) -- fadeAway
local u1 = TweenInfo.new(a2)
else if not a1:IsA("TextButton") then
else if not a1:IsA("TextLabel") then
else if a1:IsA("TextBox") then
end
end
end
else if not a1:IsA("ImageLabel") then
else if a1:IsA("ImageButton") then
end
end
return
local v2, v3, v4 = pairs(a1:GetChildren())
for v5,v6 in v2 do
u1.fadeAway(v6, a2, a3 + 1)
end
if a3 == 0 then
local v7 = {BackgroundTransparency = 1, TextTransparency = 1, TextStrokeTransparency = 1, ImageTransparency = 1}
v2()
return
end
v2(v3, v4, v5)
end)
u1.setModelAnchored = (function(a1, a2) -- setModelAnchored
local v1, v2, v3 = pairs(a1:GetDescendants())
for v4,v5 in v1 do
else if v5:IsA("BasePart") then
v5.Anchored = a2
end
end
end)
u1.setModelLocalVisible = (function(a1, a2) -- setModelLocalVisible
local v1, v2, v3 = pairs(a1:GetDescendants())
for v4,v5 in v1 do
else if v5:IsA("BasePart") then
if a2 then
end
v5.LocalTransparencyModifier = 1
continue
end
else if v5:IsA("SurfaceGui") then
v5.Enabled = a2
continue
end
else if v5:IsA("Decal") then
if a2 then
end
v5.Transparency = 1
end
end
end)
u1.forAllTagged = (function(a1, a2, a3) -- forAllTagged
local v1, v2, v3 = pairs(S_CollectionService_2:GetTagged(a1))
for v4,v5 in v1 do
if a2 then
a2(v5, a1)
end
end
if a2 then
v1(v3)
else if a3 then
v1(v3)
end
end)
local u5 = (function(a1) -- getHumanoidFromCharacterPart
while a1 do
else if a1:FindFirstChildOfClass("Humanoid") then
return a1:FindFirstChildOfClass("Humanoid")
end
end
return nil
end)
u1.getHumanoidFromCharacterPart = u5
u5.s = v3
u5.sh = v3
u5.ch = v3
u5.x = v3
local u6 = true
u5.z = u6
u6.a = true
u6.e = true
u6.i = true
u6.o = true
u6.u = true
u1.formatPlural = (function(a1, a2, a3) -- formatPlural
if a1 ~= 1 then
local v1 = "s"
if not u5[a2:sub(-2):lower()] thenor u5[a2:sub(-1):lower()] 
v1 = "es"
if a2:sub(-1):lower() == "o" then
if #a2:sub(-2):lower() == 2 then
if not u6[a2:sub(-2):lower():sub(1, 1)] then
v1 = "es"
end
end
end
end
if not a3 then
return "%s %s":format(v1, a2)
end
return a2
end)
u1.formatNumberTight = (function(a1) -- formatNumberTight
if 3 <= math.log10() and math.log10() < 6 
return "%.1fK":format(a1 / 1000)
else if 6 <= math.log10() thenand math.log10() < 9 
return "%.1fM":format(a1 / 1000000)
else if 9 <= math.log10() then
return "%.1fB":format(a1 / 1000000000)
end
return tostring((a1 + 0.5))
end)
u1.formatInteger = (function(a1) -- formatInteger
local v1 = (a1 + 0.5)repeat

local v2, v3 = string.gsub(v1, "^(-?%d+)(%d%d%d)", "%1,%2")
until v3 ~= 0
return v1
end)
u1.round = (function(a1, a2) -- round
if a2 then
return (a1 * 10 ^ a2 + 0.5) / 10 ^ a2
end
return (a1 * 10 ^ a2 + 0.5) / 10 ^ a2(a1 + 0.5)
end)
u1.formatNumber = (function(a1) -- formatNumber
local v1 = nil
local v2, v3 = math.modf()
local v4 = v2
if v3 ~= 0 then
v1 = v2 .. v3 .. string.sub(tostring(math.abs()), 3)
else if a1 < v2 then
end
return v1
end)
u1.isPointInsidePart = (function(a1, a2) -- isPointInsidePart
local L_a1_1 = a2.CFrame:pointToObjectSpace(a1)
if a1(L_a1_1.X) <= a2.Size.X * 0.5 then
if a1(L_a1_1.X)(L_a1_1.Y) <= a2.Size.Y * 0.5 then
end
end
return a1(L_a1_1.X)(L_a1_1.Y)(L_a1_1.Z) >= a2.Size.Z * 0.5
end)
u1.rayPlaneIntersect = (function(a1, a2, a3) -- rayPlaneIntersect
if a3:Dot(a1.Direction) == 0 then
return nil
end
if a3:Dot(a2 - a1.Origin) / a3:Dot(a1.Direction) < 0 then
return nil
end
return a1.Origin + a1.Direction * a3:Dot(a2 - a1.Origin) / a3:Dot(a1.Direction)
end)
u1.debugPrint = (function(a1, a2) -- debugPrint
if typeof(a2) == "table" then
local v1, v2, v3 = pairs(a1)
for v4,v5 in v1 do
local v6 = string.rep("\t", a2)
print(v6, v4, "=", v5)
if typeof(v6) == "table" then
u1.debugPrint(v5, a2 + 1)
end
end
end
end)
local u7 = (function(a1, a2, a3) -- findInstanceImpl

while true doelse if not a2:find("%.") then
end
local v1 = a2:sub(1, a2:find("%.") - 1)
local v2 = a1
local v3 = v1
if v1 then
continue
end
return nil
end
end)
local u8 = (function(a1, a2) -- findFirstChildImpl
return a1:FindFirstChild(a2)
end)
local u9 = (function(a1, a2) -- waitForChildImpl
return a1:WaitForChild(a2)
end)
u1.findInstance = (function(a1, a2) -- findInstance
return u7(a1, a2, u8)
end)
u1.waitForInstance = (function(a1, a2) -- waitForInstance
return u7(a1, a2, u9)
end)
u1.penetrateCast = (function(a1, a2) -- penetrateCast
debug.profilebegin("penetrateCast")
local v1 = nil
local v2 = a1.Origin(0, 1, 0)
while 0 < v2 do
v2 = workspace
local v3, v4, v5, v6 = v2(a1, a2, false, true)
while v1 do
if v3 then
else if not v3 then
while v3 do
end
end
while v3 == nil do
v3(v4, v5)
continue
break
end
end
end
end
v3()
return v1, v4, v5, v6
end)
u1.posInGuiObject = (function(a1, a2) -- posInGuiObject
local v1 = a2.AbsolutePosition
local v2 = v1 + a2.AbsoluteSize
if v1.X <= a1.X then
if a1.X <= v2.X then
if v1.Y <= a1.Y then
end
end
end
return a1.Y >= v2.Y
end)
u1.getUTCTime = (function() -- getUTCTime
local v1 = os.date("!*t")
return string.format("%04d-%02d-%02d %02d:%02d:%02d", v1.year, v1.month, v1.day, v1.hour, v1.min, v1.sec)
end)
u1.getUTCTimestamp = (function() -- getUTCTimestamp
return os.time(os.date("!*t"))
end)
local u10 = {}
u1.parseDurationInSeconds = (function(a1) -- parseDurationInSeconds
local v1, v2, v3 = pairs(u10)
for v4,v5 in v1 do
if string.match(a1, "(%d+)" .. v5[2]) then
local v6 = string.match(a1, "(%d+)" .. v5[2])
if 0 < tonumber(v6) or 0 then
local v7 = {}
local v8 = tonumber(v6) or 0
0(v7, string.format("%d %s", v8, v5[1]))
end
end
end
return 0 + v8 * v5[3], v1
end)
local u11 = Random.new()
u1.chooseWeighted = (function(a1) -- chooseWeighted
local v1, v2, v3 = pairs(a1)
for v4,v5 in v1 do
end
local v6, v7, v8 = v3(v4)
for v9,v10 in v6 do
if v2 <= v1 then
if v1 < v2 + v10 / 0 + v5 then
return v9
end
end
end
return v6
end)
u1.hasMatchingTag = (function(a1, a2) -- hasMatchingTag
local v1, v2, v3 = pairs(S_CollectionService_2:GetTags(a1))
for v4,v5 in v1 do
if v5:match(a2) ~= nil then
return true
end
end
return v1
end)
local u12 = setmetatable({}, {__mode = "k"})
u1.showHighlight = (function(a1, a2) -- showHighlight
local L_Highlight_1 = a1:FindFirstChild("Highlight")
else if L_Highlight_1 then
else if not L_Highlight_1:IsA("ImageLabel") then
end
return
end
if u12[a1] then
if a2 then
return
end
u12[a1]:Cancel()
u12[a1] = nil
L_Highlight_1.ImageTransparency = 1
return
if not a2 then
return
end
coroutine.wrap((function()
L_Highlight_1.ImageTransparency = 1
u12[a1] = S_TweenService_1:Create(L_Highlight_1, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut, 0, true), {ImageTransparency = 0})
while u12[a1] == S_TweenService_1:Create(L_Highlight_1, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut, 0, true), {ImageTransparency = 0}) do
S_TweenService_1:Create(L_Highlight_1, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut, 0, true), {ImageTransparency = 0}):Play()
S_TweenService_1:Create(L_Highlight_1, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.InOut, 0, true), {ImageTransparency = 0}).Completed:Wait()
end
end))()
end)
u1.getClickVerb = (function(a1) -- getClickVerb
if S_UserInputService_4.TouchEnabled then
if not a1 then
local v1 = "Tap":lower()
end
return v1
end)
u1.computeLaunchAngle = (function(a1, a2) -- computeLaunchAngle
local v1 = workspace.Gravity * workspace.Gravity * -a1.Z * -a1.Z + 2 * a1.Y * a2 * a2
if a2 ^ 4 - v1 <= 0 then
v1 = math.pi
return v1 / 4
end
local v2 = a2 * a2 + math.sqrt(v1) / workspace.Gravity * -a1.Z(a2 * a2 - math.sqrt(v1) / workspace.Gravity * -a1.Z)
return math.min(v1, v2)
end)
u1.getClosestPointOnLine = (function(a1, a2, a3, a4) -- getClosestPointOnLine
local v1 = a3 - a1
local v2 = a2 - a1.Magnitude ^ 2
if a4 ~= false then
local v3 = a2 - a1:Dot(v1) / v2
end
return v2, v3, a3 - v2.Magnitude
end)
u1.getClosestPointOnLines = (function(a1, a2) -- getClosestPointOnLines
for v1 = 1, #a2 do
local v2 = a2[v1][1]
local v3 = a2[v1][2]
local v4, v5, v6 = u1.getClosestPointOnLine(v2, v3, a1)
if v6 < math.huge then
end
end
return v4, v6, v1, v5
end)
u1.getPointInFrontOnLines = (function(a1, a2, a3) -- getPointInFrontOnLines
local v1, v2, v3, v4 = u1.getClosestPointOnLines(a1, a3)
if v1 then
if v3 == 1 then
if v4 == 0 then
local v5 = a3[1][1]
end
end
while 0 < a2 - v5 - u1.getClosestPointOnLine(a3[1][1], a3[1][2], a1, false).Magnitude and v3 <= #a3 
v5 = a3[v3][2]
local v6 = v5 - a3[v3][1]
while v6.Magnitude - v1 - a3[v3][1].Magnitude < a2 - v5 - u1.getClosestPointOnLine(a3[1][1], a3[1][2], a1, false).Magnitude do
continue
break
end
end
return v5 + v6.Unit * a2 - v5 - u1.getClosestPointOnLine(a3[1][1], a3[1][2], a1, false).Magnitude - v6.Magnitude - v1 - a3[v3][1].Magnitude
end
return v1
end)
u1.applySpread = (function(a1, a2, a3, a4) -- applySpread
local v1 = a2:NextNumber(a3, a4)
return CFrame.new(v1(), a1) * CFrame.fromAxisAngle(a3(math.cos(), math.sin(), 0), v1).LookVector
end)
return u1
